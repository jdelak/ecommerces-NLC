<!-- MODAL CB -->
<div class="form-horizontal step_cb modali" style="display : none">
    <div class='card-wrapper'></div>
    <div class="col-md-10 col-md-offset-1 modal-payment modal-content">
        <div class="modal-header">
            <h4 class="modal-title">Paiement CB</h4>
            <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                <span aria-hidden="true">&times;</span>
            </button>
        </div>
        <div class="modal-form">
            <div class="form-group" id="card-owner-field">
                <label class="col-sm-3 control-label" for="owner"><?php echo __('Card Name'); ?></label>
                <div class="col-sm-9">
                    <input type="text" class="form-control owner" name="cb[owner]" placeholder="Card Holder's Name">
                    <span class="ifError"></span>
                </div>
            </div>
            <div class="form-group">
                <label class="col-sm-3 control-label" for="card-type"><?php echo __('Card Type'); ?></label>
                <div class="col-sm-9">
                    <select class="hidden cardType" name="cb[cardType]">
                        <option value="AE">American Express</option>
                        <option value="VI">Visa</option>
                        <option value="MC">MasterCard</option>
                        <option value="DI">Discover</option>
                        <option value="CB" selected>default</option>
                    </select>
                    <img id="amex" class="transparent"          src="<?php echo $this->getViewFileUrl('Ntic_Pay::images/American-Express-Curved.png'); ?>" />
                    <img id="visa" class="transparent"          src="<?php echo $this->getViewFileUrl('Ntic_Pay::images/Visa-Curved.png'); ?>" />
                    <img id="mastercard" class="transparent"    src="<?php echo $this->getViewFileUrl('Ntic_Pay::images/Mastercard-Curved.png'); ?>" />
                    <img id="discover" class="transparent"      src="<?php echo $this->getViewFileUrl('Ntic_Pay::images/Discover-Curved.png'); ?>" />
                </div>
            </div>
            <div class="form-group card-number-field">
                <label class="col-sm-3 control-label" for="card-number"><?php echo __('Card Number'); ?> </label>
                <div class="col-sm-9">
                    <input type="text" class="form-control cardNumber" name="cb[cardNumber]" placeholder="Debit/Credit Card Number">
                    <span class="ifError"></span>
                </div>
            </div>
            <div class="form-group card-expiry-field">
                <label class="col-sm-3 control-label" for="expiry-month"><?php echo __('Expiration Date');?> </label>
                <div class="col-sm-9">
                    <div class="row">
                        <div class="col-xs-3">
                            <select class="form-control col-sm-2 expiryMonth" name="cb[expiryMonth]">
                                <?php for($i = 1; $i <= 12; $i++){ ?>
                                    <option value="<?php echo sprintf("%02d",$i); ?>"><?php echo sprintf("%02d",$i); ?></option>
                                <?php } ?>
                            </select>
                        </div>
                        <div class="col-xs-3">
                            <select class="form-control expiryYear" name="cb[expiryYear]">
                                <?php
                                    for ($i = 0; $i <= 8; $i++ ){
                                        $current_year = date('Y') + $i;
                                        $selected = ($current_year == date('Y')) ? 'selected' : '';
                                        echo '<option value="'.$current_year.'" '.$selected.'>'.$current_year.'</option>';
                                    }
                                ?>
                            </select>
                        </div>
                        <span class="ifError"></span>
                    </div>
                </div>
            </div>
            <div class="form-group card-cvv-field">
                <label class="col-sm-3 control-label" for="cvv"><?php echo __('Card CVV'); ?></label>
                <div class="col-sm-3">
                    <input type="text" class="form-control cvv" name="cb[cvv]" placeholder="Security Code">
                    <span class="ifError"></span>
                </div>
            </div>
        </div>
        <div class="modal-footer">
            <div class="submit-payment text-right" id="payment-cb">
                <button type="button" class="btn btn-lg btn-default submit-cb"><?php echo __('Save'); ?></button>
            </div>
        </div>
    </div>
</div>

<script>
    require(['jquery', 'payform'], function ($) {
        var owner               = $("input[name='cb[owner]']");
        var cardNumber          = $("input[name='cb[cardNumber]']");
        var cardNumberField     = $('.card-number-field');
        var cardOwnerField      = $('.card-owner-field');
        var CCVField            = $('.card-cvv-field');
        var expiryField         = $('.card-expiry-field');
        var CVV                 = $("input[name='cb[cvv]']");
        var mastercard          = $(".mastercard");
        var visa                = $(".visa");
        var amex                = $(".amex");
        var discover            = $(".discover");
        var month               = $("input[name='cb[expiryMonth]']");
        var year                = $("input[name='cb[expiryYear]']");
        var button              = $(".submit-cb");

        //formate les champs card number et cvv pour validation avec Payform
        //cardNumber.payform('formatCardNumber');
        CVV.payform('formatCardCVC');

        //sélectionne le type de carte en fonction du numéro de carte et vérifie si celle-ci est valide
        cardNumber.keyup(function() {
            amex.removeClass('transparent');
            visa.removeClass('transparent');
            mastercard.removeClass('transparent');
            discover.removeClass('transparent');

            /*if ($.payform.validateCardNumber(cardNumber.val()) == false) {
                cardNumberField.removeClass('has-success');
                cardNumberField.addClass('has-error');
            } else {
                cardNumberField.removeClass('has-error');
                cardNumberField.addClass('has-success');
            }*/

            if(cardNumber.val().length != 15 && cardNumber.val().length != 16){
                cardNumberField.removeClass('has-success');
                cardNumberField.addClass('has-error');
            } else {
                cardNumberField.removeClass('has-error');
                cardNumberField.addClass('has-success');
            }

            if(cardNumber.val().length==0){
                cardNumberField.removeClass('has-success');
                cardNumberField.removeClass('has-error');
            }

            if(cardNumber.val().length == 16 || cardNumber.val().length == 15){
                if(!LuhnCheck(cardNumber.val())){
                    cardNumberField.removeClass('has-success');
                    cardNumberField.addClass('has-error');
                } else {
                    cardNumberField.removeClass('has-error');
                    cardNumberField.addClass('has-success');
                }
            }


            if ($.payform.parseCardType(cardNumber.val()) == 'visa') {
                mastercard.addClass('transparent');
                amex.addClass('transparent');
                discover.addClass('transparent');
                $('#cardType').val('VI').select();
            } else if ($.payform.parseCardType(cardNumber.val()) == 'amex') {
                mastercard.addClass('transparent');
                visa.addClass('transparent');
                discover.addClass('transparent');
                $('#cardType').val('AE').select();
            } else if ($.payform.parseCardType(cardNumber.val()) == 'mastercard') {
                amex.addClass('transparent');
                visa.addClass('transparent');
                discover.addClass('transparent');
                $('#cardType').val('MC').select();
            } else if ($.payform.parseCardType(cardNumber.val()) == 'discover') {
                amex.addClass('transparent');
                visa.addClass('transparent');
                mastercard.addClass('transparent');
                $('#cardType').val('DI').select();
            }

            hasError();
        });

        //vérifie et valide que le champs card name contient au moins 5 caractère
        owner.keyup(function(){
            if(owner.val().length < 2) {
                cardOwnerField.find("span").html("<?php echo __('2 characters minimum required'); ?>");
                cardOwnerField.addClass('has-error');
            } else {
                cardOwnerField.find("span").html("");
                cardOwnerField.removeClass('has-error');
                cardOwnerField.addClass('has-success');
            }

            hasError();
        });

        //autorise uniquement les caractères alphanumeriques pour le champs card name
        /*owner.keypress(function(e){
         var regex = new RegExp("^[a-zA-Z0-9]+$");
         var str = String.fromCharCode(!e.charCode ? e.which : e.charCode);
         if (regex.test(str)) {
         return true;
         }

         e.preventDefault();
         return false;
         }); */

        //Vérifie et valide que le cvv contient 3 ou 4 caractères
        CVV.keyup(function(){
            if(CVV.val().length < 3 || CVV.val().length >4){
                CCVField.find("span").html("<?php echo __('Invalid Security Code'); ?>");
                CCVField.addClass('has-error');
            } else {
                CCVField.find("span").html("");
                CCVField.removeClass('has-error');
                CCVField.addClass('has-success');
            }

            hasError();
        });

        //vérifie si la date d'expiration n'est pas antérieur à la date d'aujourd'hui
        month.on('change',function(){
            checkDate();
        });
        year.on('change',function(){
            checkDate();
        });

        // vérifie la logique des choix de la date d'expiration
        function checkDate(){
            var nowMonth = (new Date().getMonth()) + 1;
            var nowYear = new Date().getFullYear();
            if(month.val() < nowMonth && year.val() <= nowYear ){
                expiryField.addClass('has-error');
                expiryField.find("span").html("<?php echo __('Invalid expiration date'); ?>");
            } else {
                expiryField.removeClass('has-error');
                expiryField.addClass('has-success');
                expiryField.find("span").html("");
            }

            hasError();
        }

        // permet de désactiver le bouton de validation
        function hasError(){
            if($('.has-error').length){
                button.addClass('disabled');
            } else {
                button.removeClass('disabled');
                $('.cash-validate').show().css('display', 'flex').html('<div class="paiement-ok">CB <i class="fa fa-check" aria-hidden="true"></i></div>').addClass('flex-between').addClass('block-payment-ok');
            }
        }

        function LuhnCheck(aNombre)
        {
            // on vire les espaces et . dans le texte
            var lNbSaisi=litnombre(aNombre);

            // voir explication algorithme à la rubrique explication

            if (lNbSaisi.length!=16)
            {
                //alert("Ce numéro ne comporte pas 16 chiffres");
                return 0;
            }

            var li=0;
            while (li<eval(lNbSaisi.length))
            {
                document.forms[0]["src"+li]=lNbSaisi.charCodeAt(li)-48;
                if (li % 2 == 0)
                {
                    // entiers de rang impairs (numérotation commence à 0)
                    document.forms[0]["dst"+li]=document.forms[0]["src"+li]*2;
                    if (document.forms[0]["dst"+li]>=10)
                    {
                        document.forms[0]["dst"+li]=document.forms[0]["dst"+li]-9;
                    }
                }
                else
                {
                    document.forms[0]["dst"+li]=document.forms[0]["src"+li];
                }
                li++;
            }

            // calcul de la somme :
            var lSomme=0;
            li=0;
            while (li<eval(lNbSaisi.length))
            {
                lSomme=lSomme+document.forms[0]["dst"+li];
                li++;
            }

            if (lSomme % 10 == 0)
            {
                return 1;
            }
            else
            {
                //alert("Ce numéro n'est pas un format valide de carte bancaire");
                return 0;
            }
        }
        function litnombre(aChaineNombre)
        {
            // retire les espaces les points et autres cartes différents des nombres
            var li=0;
            var lChaine=""+aChaineNombre;
            //	var lChaine=aChaineNombre;

            //	alert(lChaine);
            //	alert(lChaine.charCodeAt(li));

            while (li<eval(lChaine.length))
            {
                if (lChaine.charCodeAt(li)<48 || lChaine.charCodeAt(li)>57)
                {
                    lChaine=lChaine.substring(0,li)+lChaine.substring(li+1,lChaine.length);
                    li--;
                }

                li++;
            }
            return lChaine;
        }

    });
</script>